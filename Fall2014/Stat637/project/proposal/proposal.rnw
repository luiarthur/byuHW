\documentclass{article}
\usepackage{fullpage}
\usepackage{pgffor}
\usepackage{amssymb}
\usepackage{bm}
\usepackage{mathtools}
\usepackage{verbatim}
\usepackage{appendix}
\usepackage{graphicx}
\usepackage[UKenglish]{isodate} % for: \today
\cleanlookdateon                % for: \today

\def\wl{\par \vspace{\baselineskip}\noindent}
\def\beginmyfig{\begin{figure}[htbp]\begin{center}}
\def\endmyfig{\end{center}\end{figure}}
%\def\prodl{\prod\limits_{i=1}^n}
\def\suml{\sum\limits_{i=1}^n}
\def\ds{\displaystyle}

\begin{document}
% my title:
\begin{center}
  \section*{\textbf{Stat637 Project Proposal}
    %\footnote{https://github.com/luiarthur/Fall2014/blob/master/Stat637/5}
  }  
  \subsection*{\textbf{Arthur Lui}}
  \subsection*{\noindent\today}
\end{center}

\noindent
In the plot below, we see that there are three groups or clusters of 
observations. One could fit one linear model
\[
  y = \beta_0 + \beta_1 x + \epsilon
\]
through all three clusters together (the black line); but it would be more
appropriate to fit three seperate models to each cluster (the colored lines).
Using linear mixed models (LMM), we could fit the model 
\[
  y_i = \beta_0 + \beta_1 x_i + Z_i \gamma + \epsilon_i
\]
to account for the effect of each cluster. However, if the clusters are latent, 
and not observed, we cannot specify the design matrix $\bm Z$ when using LMM's.\\

\noindent
Using an Indian Buffet Process Prior, a distribution for sparse and infinite 
binary matrices, I will propose a model and sampling algorithm to estimate Z.
Time permitting, I will complete a simulation study to assess the performance
of the algorithm. I will extend these ideas to generalized linear models, 
specifically when the link function is the logistic function, and the response
variable is binary.\\
\begin{center}
<<fig=T,echo=F>>=
  n <- 50
  x1 <- rnorm(1:n)
  e1 <- rnorm(n)
  x2 <- rnorm(1:n)
  e2 <- rnorm(n)
  x3 <- rnorm(1:n)
  e3 <- rnorm(n)

  b1 <- 1.5
  b0 <- c(3,7,11)
  
  y1 <- b1[1] + b1*x1 + e1
  y2 <- b0[2] + b1*x2 + e2
  y3 <- b0[3] + b1*x3 + e3

  plot(x1,y1,ylim=c(min(y1,y2,y3),max(y1,y2,y3)),
             xlim=c(min(x1,x2,x3),max(x1,x2,x3)),col="blue")
  points(x2,y2,col="red")
  points(x3,y3,col="green")

  mod <- lm(c(y1,y2,y3)~c(x1,x2,x3))
  abline(mod,lwd=3)

  mod1 <- lm(y1~x1)
  mod2 <- lm(y2~x2)
  mod3 <- lm(y3~x3)
  
  abline(mod1,col="blue",lwd=3)
  abline(mod2,col="red",lwd=3)
  abline(mod3,col="green",lwd=3)
@
\end{center}


\end{document}
